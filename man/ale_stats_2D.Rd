% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats.R
\name{ale_stats_2D}
\alias{ale_stats_2D}
\title{Calculate statistics from 2D ALE y values.}
\usage{
ale_stats_2D(ale_data, x_cols, x_types, y_vals = NULL, ale_y_norm_fun = NULL)
}
\arguments{
\item{ale_data}{dataframe. ALE data}

\item{x_cols}{character. Names of the x columns in \code{ale_data}.}

\item{x_types}{character same length as \code{x_cols}. Variable types (output of \code{\link[=var_type]{var_type()}}) of corresponding \code{x_cols}.}

\item{y_vals}{See documentation for \code{\link[=ale_stats]{ale_stats()}}}

\item{ale_y_norm_fun}{See documentation for \code{\link[=ale_stats]{ale_stats()}}}
}
\value{
Same as \code{\link[=ale_stats]{ale_stats()}}.
}
\description{
When calculating second-order (2D) ALE statistics, there is no difficulty if both variables are categorical. The regular formulas for ALE operate normally. However, if one or both variables is numeric, the calculation is complicated by the necessity to determine the ALE midpoints between the ALE bin ceilings of the numeric variables. This function calculates these ALE midpoints for the numeric variables and resets the ALE bins to these values. The ALE values for ordinal ordinal variables are not changed. As part of the adjustment, the lowest numeric bin is merged into the second: the ALE values are completely deleted (since they do not represent a midpoint) and their counts are added to the first true bin.
}
\details{
After these possible adjustments, the ALE y values and bin counts are passed to \code{\link[=ale_stats]{ale_stats()}}, which calculates their statistics as an ordinal variable since the numeric variables have thus been discretized.

Not exported.
}
